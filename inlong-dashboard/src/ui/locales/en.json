{
  "basic.Edit": "Edit",
  "basic.Search": "Search",
  "basic.Detail": "Detail",
  "basic.Operating": "Operation",
  "basic.OperatingSuccess": "Operating success",
  "basic.ConnectionSuccess": "Connection success",
  "basic.Save": "Save",
  "basic.Cancel": "Cancel",
  "basic.Confirm": "Confirm",
  "basic.Create": "Create",
  "basic.Delete": "Delete",
  "basic.DeleteConfirm": "Are you sure to delete?",
  "basic.DeleteSuccess": "Delete success",
  "basic.Refresh": "Refresh",
  "basic.Status": "Status",
  "basic.Creator": "Creator",
  "basic.Modifier": "Modifier",
  "basic.CreateTime": "Create time",
  "basic.ModifyTime": "Modify time",
  "basic.Yes": "Yes",
  "basic.No": "No",
  "basic.Stop": "Stop",
  "basic.Restart": "Restart",
  "basic.ConfirmRestart": "Confirm restart?",
  "basic.ConfirmStop": "Confirm stop?",
  "basic.SuccessfullyRestart": "Successfully restart",
  "basic.SuccessfullyStop": "Successfully stop",
  "meta.Sources.Name": "Source name",
  "meta.Sources.ClusterName": "Cluster Name",
  "meta.Sources.NameRule": "Only English letters, numbers, dots(.), minus(-), and underscores(_)",
  "meta.Sources.Type": "Type",
  "meta.Sources.File.SerializationType": "File type",
  "meta.Sources.File.DataSourceIP": "Source ip",
  "meta.Sources.File.ClusterName": "Cluster name",
  "meta.Sources.File.FilePath": "File path",
  "meta.Sources.File.FilePathHelp": "Must be an absolute path and support regular expressions, such as: /data/.*log",
  "meta.Sources.File.FilePathPatternHelp": "File path cannot contain spaces",
  "meta.Sources.File.FileIpHelp": "Please select the file collection node IP. If the IP is not fixed, please select All",
  "meta.Sources.File.IpRule": "Please enter the IP address correctly",
  "meta.Sources.File.VersionRule":"Please enter the correct version number",
  "meta.Sources.File.TimeOffset": "Time offset",
  "meta.Sources.File.TimeOffsetHelp": "The file will be collected from a certain time,' 1m' means 1 minute later,' -1m' means 1 minute before, and m(minute), h(hour), d(day) are supported. If it is empty, the file will be collected from the current time",
  "meta.Sources.File.TimeOffsetRules": "Can only contain numbers and letters m, h, d",
  "meta.Sources.File.MaxFileCount": "Max file count",
  "meta.Sources.File.Cycle": "Cycle",
  "meta.Sources.File.Cycle.Day": "Day",
  "meta.Sources.File.Cycle.Hour": "Hour",
  "meta.Sources.File.Cycle.RealTime": "Real time",
  "meta.Sources.File.Cycle.Minute": "Minute",
  "meta.Sources.File.TimeZone": "Time zone",
  "meta.Sources.Db.Server": "Server",
  "meta.Sources.Db.Port": "Port",
  "meta.Sources.Db.ServerTimezone": "Timezone",
  "meta.Sources.Db.IntervalMs": "Recording offset",
  "meta.Sources.Db.User": "User",
  "meta.Sources.Db.Password": "Password",
  "meta.Sources.Db.HistoryFilename": "History file name",
  "meta.Sources.Db.AllMigration": "All migration",
  "meta.Sources.Db.TableWhiteList": "Table white list",
  "meta.Sources.Db.TableWhiteListHelp": "The whitelist should be a comma-separated list of regular expressions that match the fully-qualified names of tables to be monitored. Fully-qualified names for tables are of the form <databaseName>.<tableName>, the dbName and tableName can be configured with regular expressions. For example: test_db.order*, inlong_db*.user*, means to collect all tables starting with order in the test_db database + all tables starting with user under all databases starting with inlong_db.",
  "meta.Sources.Db.DatabaseWhiteList": "Database white list",
  "meta.Sources.Db.DatabaseWhiteListHelp": "A list of databases to be collected, supporting regular expressions, separated by commas, for example: db1,test_db, databases not in the list will be excluded. If not set, all databases are monitored.",
  "meta.Sources.Db.ReadMode": "Read mode",
  "meta.Sources.Db.Incremental": "Incremental",
  "meta.Sources.Db.FullAmountAndIncremental": "Full amount + Incremental",
  "meta.Sources.Mongodb.Hosts": "Hosts",
  "meta.Sources.Mongodb.Username": "Username",
  "meta.Sources.Mongodb.Password": "Password",
  "meta.Sources.Mongodb.Database": "Database",
  "meta.Sources.Mongodb.Collection": "Collection",
  "meta.Sources.Mongodb.SnapshotMode": "Snapshot Mode",
  "meta.Sources.Mongodb.SnapshotMode.Initial": "Initial",
  "meta.Sources.Mongodb.SnapshotMode.Never": "Never",
  "meta.Sources.Mongodb.PrimaryKey": "Primary key",
  "meta.Sources.Oracle.Hostname": "Hostname",
  "meta.Sources.Oracle.Port": "Port",
  "meta.Sources.Oracle.Username": "Username",
  "meta.Sources.Oracle.Password": "Password",
  "meta.Sources.Oracle.Database": "Database",
  "meta.Sources.Oracle.SchemaName": "Schema name",
  "meta.Sources.Oracle.TableName": "Table name",
  "meta.Sources.Oracle.AllMigration": "All migration",
  "meta.Sources.Oracle.ScanStartupMode": "Scan startup mode",
  "meta.Sources.Oracle.PrimaryKey": "Primary key",
  "meta.Sources.PostgreSQL.Hostname": "Hostname",
  "meta.Sources.PostgreSQL.Port": "Port",
  "meta.Sources.PostgreSQL.Username": "Username",
  "meta.Sources.PostgreSQL.Password": "Password",
  "meta.Sources.PostgreSQL.Database": "Database",
  "meta.Sources.PostgreSQL.SchemaName": "Model",
  "meta.Sources.PostgreSQL.TableName": "Table name",
  "meta.Sources.PostgreSQL.TableNameHelp": "Multiple table names are supported, separated by commas",
  "meta.Sources.PostgreSQL.SyncTableNameHelp": "Support mode plus table name filling, example: public.tableName",
  "meta.Sources.PostgreSQL.decodingPluginName": "Decoding Plugin Name",
  "meta.Sources.PostgreSQL.PrimaryKey": "Primary key",
  "meta.Sources.SQLServer.Hostname": "Hostname",
  "meta.Sources.SQLServer.Port": "Port",
  "meta.Sources.SQLServer.Username": "Username",
  "meta.Sources.SQLServer.Password": "Password",
  "meta.Sources.SQLServer.Database": "Database",
  "meta.Sources.SQLServer.SchemaName": "Schema name",
  "meta.Sources.SQLServer.TableName": "Table name",
  "meta.Sources.SQLServer.AllMigration": "All migration",
  "meta.Sources.SQLServer.ServerTimezone": "Timezone",
  "meta.Sources.SQLServer.PrimaryKey": "Primary key",
  "meta.Sources.Redis.Hostname": "Hostname",
  "meta.Sources.Redis.Port": "Port",
  "meta.Sources.Redis.Username": "Username",
  "meta.Sources.Redis.Password": "Password",
  "meta.Sources.Redis.Database": "Database number",
  "meta.Sources.Redis.PrimaryKey": "Primary key",
  "meta.Sources.Redis.RedisCommand": "Redis command",
  "meta.Sources.Redis.RedisMode": " Deploy mode",
  "meta.Sources.Redis.ClusterNodes": "Cluster Nodes",
  "meta.Sources.Redis.MasterName": "Master name",
  "meta.Sources.Redis.SentinelsInfo": "Sentinels info",
  "meta.Sources.Redis.AdditionalKey": "Additional key",
  "meta.Sources.Redis.Timeout": "Timeout",
  "meta.Sources.Redis.SoTimeout": "So timeout",
  "meta.Sources.Redis.MaxTotal": "Max total",
  "meta.Sources.Redis.MaxIdle": "Max idle",
  "meta.Sources.Redis.MinIdle": "Min idle",
  "meta.Sources.Redis.LookupAsync": "Lookup async",
  "meta.Sources.Redis.LookupCacheMaxRows": "Cache max rows",
  "meta.Sources.Redis.LookupCacheTtl": "Lookup cache ttl",
  "meta.Sources.Redis.LookupMaxRetries": "Lookup max retries",
  "meta.Sources.MQTT.Username": "Username",
  "meta.Sources.MQTT.Password": "Password",
  "meta.Sources.MQTT.MqttVersion": "MQTT version",
  "meta.Sources.Hudi.DbName": "DbName",
  "meta.Sources.Hudi.TableName": "Table name",
  "meta.Sources.Hudi.Warehouse": "Warehouse",
  "meta.Sources.Hudi.ReadStreamingSkipCompaction": "Skip compaction",
  "meta.Sources.Hudi.ReadStartCommit": "Start commit",
  "meta.Sources.Hudi.ReadStreamingSkipCompactionHelp": "Whether to skip compaction commits during stream reading, skipping compaction has two purposes: 1) Avoid repeated consumption under upsert semantics (the instant of compaction is repeated data, if not skipped, there is a small probability of repeated consumption); 2) changelog Semantic correctness is guaranteed in the mode. Starting from 0.11, the above two problems have been fixed by retaining the instant time of compaction",
  "meta.Sources.Hudi.ReadStartCommitHelp": "Specify the starting commit in the format of 'yyyyMMddHHmmss' (closed range)",
  "meta.Sources.Hudi.ExtListHelper": "The DDL attribute of the hudi table needs to be prefixed with 'ddl.'",
  "meta.Sources.Hudi.ExtList": "Advanced properties",
  "meta.Sources.Iceberg.Database": "Database",
  "meta.Sources.Iceberg.TableName": "TableName",
  "meta.Sources.Iceberg.PrimaryKey": "Primary key",
  "meta.Sources.Iceberg.Warehouse": "Warehouse",
  "meta.Sources.Pulsar.PulsarTenant": "Pulsar tenant",
  "meta.Sources.Pulsar.Namespace": "Namespace",
  "meta.Sources.Pulsar.Subscription": "Subscription",
  "meta.Sources.Pulsar.SubscriptionHelp": "If not specified, the default is: inlong-agent-{inlongStreamId}",
  "meta.Sources.Pulsar.SubscriptionPosition": "Subscription Position",
  "meta.Sources.Pulsar.ResetTime": "Reset subscription time",
  "meta.Sources.Pulsar.ResetTimeHelp": "Reset the subscription time",
  "meta.Sources.Pulsar.PrimaryKey": "Primary key",
  "meta.Sources.Pulsar.DataEncoding": "Data encoding",
  "meta.Sources.Pulsar.DataSeparator": "Data separator",
  "meta.Sources.Pulsar.DataEscapeChar": "Data escape char",
  "meta.Sources.Pulsar.WrapType": "Wrap type",
  "meta.Sources.Pulsar.SerializationType": "Data type",
  "meta.Sources.Kafka.BootstrapServers": "Bootstrap Servers",
  "meta.Sources.Kafka.autoOffsetReset": "Auto Offset Reset",
  "meta.Sources.Kafka.partitionOffsets": "Partition Offsets",
  "meta.Sources.Kafka.partitionOffsetsHelp": "Customize the offsets of each partition, the format is: {partition}#{offsets}, and use underscores (_) to connect, such as: 0#0_1#3_2#1. If not specified, consumption will start from the submitted offsets of the topic.",
  "meta.Sinks.SinkName": "Name",
  "meta.Sinks.SinkNameRule": "Only English letters, numbers, dots(.), minus(-), and underscores(_)",
  "meta.Sinks.SinkType": "Type",
  "meta.Sinks.Description": "Sink description",
  "meta.Sinks.SourceFieldName": "Source field name",
  "meta.Sinks.SourceFieldType": "Source field type",
  "meta.Sinks.SourceFieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.SinkFieldName": "Sink field name",
  "meta.Sinks.SinkFieldType": "Sink field type",
  "meta.Sinks.SinkFieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.FieldDescription": "Field description",
  "meta.Sinks.Username": "Username",
  "meta.Sinks.Password": "Password",
  "meta.Sinks.EnableCreateResource": "Create resource",
  "meta.Sinks.EnableCreateResourceHelp": "If the library table already exists and does not need to be modified, select [Do not create], otherwise select [Create], and the system will automatically create the resource.",
  "meta.Sinks.DataNodeName": "Data node",
  "meta.Sinks.Http.MaxRetryTimes": "Max Retry Times",
  "meta.Sinks.Http.Headers": "Headers",
  "meta.Sinks.Http.Method": "Method",
  "meta.Sinks.Http.Path": "Path",
  "meta.Sinks.Http.FieldName": "Field Name",
  "meta.Sinks.Http.FieldValue": "Field Value",
  "meta.Sinks.FieldTypeMessage": "Please enter field type",
  "meta.Sinks.Hive.FileFormat": "File format",
  "meta.Sinks.Hive.Day": "Day(s)",
  "meta.Sinks.Hive.DataEncoding": "Data encoding",
  "meta.Sinks.Hive.DataSeparator": "Data separator",
  "meta.Sinks.Hive.DataSeparator.Space": "Space",
  "meta.Sinks.Hive.DataSeparator.Asterisk": "Asterisk(*)",
  "meta.Sinks.Hive.DataSeparator.Comma": "Comma(,)",
  "meta.Sinks.Hive.DataSeparator.Semicolon": "Semicolon(;)",
  "meta.Sinks.Hive.DataSeparator.VerticalLine": "Vertical line (|)",
  "meta.Sinks.Hive.DataSeparator.DoubleQuotes": "Double quotes(\")",
  "meta.Sinks.Hive.PartitionFieldList": "Partition field list",
  "meta.Sinks.Hive.PartitionFieldListHelp": "If the field type is timestamp, you must set the format of the field value, support MICROSECONDS, MILLISECONDS, SECONDS, SQL, ISO_8601, and custom, such as: yyyy-MM-dd HH:mm:ss, etc.",
  "meta.Sinks.Hive.DbName": "Db name",
  "meta.Sinks.Hive.TableName": "Table name",
  "meta.Sinks.Hive.ConnectionTest": "Test connection",
  "meta.Sinks.Hive.ConnectionSucceeded": "Connection succeeded",
  "meta.Sinks.Hive.ConnectionFailed": "Connection failed",
  "meta.Sinks.Hive.FieldName": "Field name",
  "meta.Sinks.Hive.FieldType": "Field type",
  "meta.Sinks.Hive.IsMetaField": "Is meta field",
  "meta.Sinks.Hive.FieldFormat": "Field format",
  "meta.Sinks.ClickHouse.DbName": "Db name",
  "meta.Sinks.ClickHouse.TableName": "Table name",
  "meta.Sinks.ClickHouse.FlushInterval": "Flush interval",
  "meta.Sinks.ClickHouse.FlushIntervalUnit": "S",
  "meta.Sinks.ClickHouse.FlushRecord": "Flush record",
  "meta.Sinks.ClickHouse.FlushRecordUnit": "items",
  "meta.Sinks.ClickHouse.RetryTimes": "Retry times",
  "meta.Sinks.ClickHouse.RetryTimesUnit": "items",
  "meta.Sinks.ClickHouse.IsDistributed": "Is distributed table",
  "meta.Sinks.ClickHouse.Yes": "Yes",
  "meta.Sinks.ClickHouse.No": "No",
  "meta.Sinks.ClickHouse.PartitionStrategy": "Partition strategy",
  "meta.Sinks.ClickHouse.PartitionFields": "Partition fields",
  "meta.Sinks.ClickHouse.Engine": "Engine",
  "meta.Sinks.ClickHouse.OrderBy": "Order by",
  "meta.Sinks.ClickHouse.PartitionBy": "Partition by",
  "meta.Sinks.ClickHouse.PrimaryKey": "Primary key",
  "meta.Sinks.ClickHouse.Cluster": "Cluster",
  "meta.Sinks.ClickHouse.CompressionCode": "Compression code",
  "meta.Sinks.ClickHouse.TtlExpr": "Ttl expr",
  "meta.Sinks.ES.Cycle": "Cycle",
  "meta.Sinks.ES.Cycle.Day": "Day",
  "meta.Sinks.ES.Cycle.Hour": "Hour",
  "meta.Sinks.ES.Cycle.Minute": "Minute",
  "meta.Sinks.ES.Index": "Index",
  "meta.Sinks.ES.DateFormat": "Date format",
  "meta.Sinks.Kafka.Server": "Server",
  "meta.Sinks.Kafka.SerializationType": "Serialization type",
  "meta.Sinks.Kafka.PartitionNum": "Partition num",
  "meta.Sinks.Kafka.AutoOffsetReset": "Auto offset reset",
  "meta.Sinks.Iceberg.DbName": "Db name",
  "meta.Sinks.Iceberg.TableName": "Table name",
  "meta.Sinks.Iceberg.FileFormat": "File format",
  "meta.Sinks.Iceberg.AppendMode": "Append mode",
  "meta.Sinks.Iceberg.Description": "Description",
  "meta.Sinks.Iceberg.ExtList": "Ext list",
  "meta.Sinks.Iceberg.DataConsistency": "Data consistency",
  "meta.Sinks.Iceberg.PartitionStrategy": "Partition strategy",
  "meta.Sinks.Iceberg.DatabasePattern": "Database name pattern",
  "meta.Sinks.Iceberg.TablePattern": "Table name pattern",
  "meta.Sinks.Iceberg.PatternHelp": "Custom configuration instructions: Built-in parameters include: 1. Source database name: ${database} 2. Source table name: ${table} [Usage Instructions]: Supports the use of built-in parameters and string combinations to generate target database table names [Example] : If the source table name is table1 and the mapping rule is ${table}_inlong, the data of table1 will be finally mapped and written to table1_inlong.",
  "meta.Sinks.Iceberg.Options.DBSameName": "Same as source database",
  "meta.Sinks.Iceberg.Options.TableSameName": "Same as source table",
  "meta.Sinks.Iceberg.Options.Customize": "Customize",
  "meta.Sinks.Hudi.DbName": "Db name",
  "meta.Sinks.Hudi.TableName": "Table name",
  "meta.Sinks.Hudi.Warehouse": "Warehouse",
  "meta.Sinks.Hudi.FileFormat": "File format",
  "meta.Sinks.Hudi.Description": "Description",
  "meta.Sinks.Hudi.ExtList": "Ext list",
  "meta.Sinks.Hudi.DataConsistency": "Data consistency",
  "meta.Sinks.Hudi.PrimaryKey": "Primary key",
  "meta.Sinks.Hudi.PrimaryKeyHelper": "The Primary key fields, separated by commas (,)",
  "meta.Sinks.Hudi.PartitionKey": "Partition key",
  "meta.Sinks.Hudi.PartitionKeyHelper": "A list of partition fields, separated by commas (,).",
  "meta.Sinks.Hudi.FieldFormat": "Field format",
  "meta.Sinks.Hudi.ExtListHelper": "The DDL attribute of the hudi table needs to be prefixed with 'ddl.'",
  "meta.Sinks.Greenplum.TableName": "Table name",
  "meta.Sinks.Greenplum.PrimaryKey": "Primary key",
  "meta.Sinks.Greenplum.IsMetaField": "Is meta field",
  "meta.Sinks.Greenplum.FieldFormat": "Field format",
  "meta.Sinks.MySQL.DatabaseName": "Database name",
  "meta.Sinks.MySQL.TableName": "Table name",
  "meta.Sinks.MySQL.PrimaryKey": "Primary key",
  "meta.Sinks.MySQL.IsMetaField": "Is meta field",
  "meta.Sinks.MySQL.FieldFormat": "Field format",
  "meta.Sinks.OceanBase.DatabaseName": "Database name",
  "meta.Sinks.OceanBase.TableName": "Table name",
  "meta.Sinks.OceanBase.PrimaryKey": "Primary key",
  "meta.Sinks.OceanBase.IsMetaField": "Is meta field",
  "meta.Sinks.OceanBase.FieldFormat": "Field format",
  "meta.Sinks.Oracle.TableName": "Table name",
  "meta.Sinks.Oracle.PrimaryKey": "Primary key",
  "meta.Sinks.Oracle.IsMetaField": "Is meta field",
  "meta.Sinks.Oracle.FieldFormat": "Field format",
  "meta.Sinks.PostgreSQL.DbName": "Db name",
  "meta.Sinks.PostgreSQL.TableName": "Table name",
  "meta.Sinks.PostgreSQL.PrimaryKey": "Primary key",
  "meta.Sinks.PostgreSQL.IsMetaField": "Is meta field",
  "meta.Sinks.PostgreSQL.FieldFormat": "Field format",
  "meta.Sinks.SQLServer.SchemaName": "Schema name",
  "meta.Sinks.SQLServer.AllMigration": "All migration",
  "meta.Sinks.SQLServer.ServerTimezone": "Server timezone",
  "meta.Sinks.SQLServer.TableName": "Table name",
  "meta.Sinks.SQLServer.PrimaryKey": "Primary key",
  "meta.Sinks.SQLServer.IsMetaField": "Is meta field",
  "meta.Sinks.SQLServer.FieldFormat": "Field format",
  "meta.Sinks.TDSQLPostgreSQL.SchemaName": "Schema name",
  "meta.Sinks.TDSQLPostgreSQL.TableName": "Table name",
  "meta.Sinks.TDSQLPostgreSQL.PrimaryKey": "Primary key",
  "meta.Sinks.TDSQLPostgreSQL.IsMetaField": "Is meta field",
  "meta.Sinks.TDSQLPostgreSQL.FieldFormat": "Field format",
  "meta.Sinks.Doris.HttpAddress": "Http address",
  "meta.Sinks.Doris.TableIdentifier": "Table name",
  "meta.Sinks.Doris.LabelPrefix": "Stream Prefix",
  "meta.Sinks.Doris.PrimaryKey": "Primary key",
  "meta.Sinks.Doris.SinkMultipleEnable": "Multiple nnable",
  "meta.Sinks.Doris.SinkMultipleFormat": "Multiple format",
  "meta.Sinks.Doris.DatabasePattern": "Database pattern",
  "meta.Sinks.Doris.TablePattern": "Table pattern",
  "meta.Sinks.Doris.IsMetaField": "Is meta field",
  "meta.Sinks.Doris.FieldFormat": "Field format",
  "meta.Sinks.Doris.DatabaseNamePattern": "Database name pattern",
  "meta.Sinks.Doris.TableNamePattern": "Table name pattern",
  "meta.Sinks.Doris.PatternHelp": "Custom configuration instructions: Built-in parameters include: 1. Source database name: ${database} 2. Source table name: ${table} [Usage Instructions]: Supports the use of built-in parameters and string combinations to generate target database table names [Example] : If the source table name is table1 and the mapping rule is ${table}_inlong, the data of table1 will be finally mapped and written to table1_inlong.",
  "meta.Sinks.Doris.Options.DBSameName": "Same as source database",
  "meta.Sinks.Doris.Options.TableSameName": "Same as source table",
  "meta.Sinks.Doris.Options.Customize": "Customize",
  "meta.Sinks.HBase.Namespace": "Namespace",
  "meta.Sinks.HBase.TableName": "Table name",
  "meta.Sinks.HBase.RowKey": "Row key",
  "meta.Sinks.HBase.ZkQuorum": "ZooKeeper address",
  "meta.Sinks.HBase.ZkNodeParent": "ZooKeeper node parent",
  "meta.Sinks.HBase.BufferFlushMaxSize": "Buffer flush max size",
  "meta.Sinks.HBase.BufferFlushMaxRows": "Buffer flush max rows",
  "meta.Sinks.HBase.BufferFlushInterval": "Buffer flush interval",
  "meta.Sinks.HBase.FlushIntervalUnit": "S",
  "meta.Sinks.HBase.IsMetaField": "Is meta field",
  "meta.Sinks.HBase.FieldFormat": "Field format",
  "meta.Sinks.StarRocks.TableName": "Table name",
  "meta.Sinks.StarRocks.PrimaryKey": "Primary key",
  "meta.Sinks.StarRocks.DatabaseName": "Database name",
  "meta.Sinks.StarRocks.SinkMultipleEnable": "Multiple fnable",
  "meta.Sinks.StarRocks.SinkMultipleFormat": "Multiple format",
  "meta.Sinks.StarRocks.DatabasePattern": "Database pattern",
  "meta.Sinks.StarRocks.TablePattern": "Table pattern",
  "meta.Sinks.StarRocks.IsMetaField": "Is meta field",
  "meta.Sinks.StarRocks.FieldFormat": "Field format",
  "meta.Sinks.Redis.FieldFormat": "Field format",
  "meta.Sinks.Redis.Database": "Database id",
  "meta.Sinks.Redis.Ttl": "TTL",
  "meta.Sinks.Redis.TtlUnit": "s",
  "meta.Sinks.Redis.ExtList": "Ext list",
  "meta.Sinks.Redis.Timeout": "Time out",
  "meta.Sinks.Redis.SoTimeout": "So timeout",
  "meta.Sinks.Redis.MaxTotal": "Max total",
  "meta.Sinks.Redis.MaxIdle": "Max idle",
  "meta.Sinks.Redis.MinIdle": "Min idle",
  "meta.Sinks.Redis.MaxRetries": "Max retries",
  "meta.Sinks.Redis.DataType": "Data type",
  "meta.Sinks.Redis.SchemaMapMode": "Schema map mode",
  "meta.Sinks.Redis.TimeoutUnit": "s",
  "meta.Sinks.Redis.SoTimeoutUnit": "s",
  "meta.Sinks.Redis.FormatDataType": "Format data type",
  "meta.Sinks.Redis.FormatIgnoreParseError": "Ignore parse error",
  "meta.Sinks.Redis.FormatDataEncoding": "Data encoding",
  "meta.Sinks.Redis.DataSeparator.Space": "Space",
  "meta.Sinks.Redis.DataSeparator.VerticalLine": "Vertical line (|)",
  "meta.Sinks.Redis.DataSeparator.Comma": "Comma(,)",
  "meta.Sinks.Redis.DataSeparator.Semicolon": "Semicolon(;)",
  "meta.Sinks.Redis.DataSeparator.Asterisk": "Asterisk(*)",
  "meta.Sinks.Redis.DataSeparator.DoubleQuotes": "Double quotes(\")",
  "meta.Sinks.Redis.FormatDataSeparator": "Data separator",
  "meta.Sinks.Kudu.masters": "masters",
  "meta.Sinks.Kudu.TableName": "Table",
  "meta.Sinks.Kudu.ExtListHelper": "The DDL attribute of the Kudu table needs to be prefixed with 'ddl.'",
  "meta.Sinks.Kudu.ExtList": "Extenstion params",
  "meta.Sinks.Kudu.DataConsistency": "Data consistency",
  "meta.Sinks.Kudu.PartitionKeyHelper": "Primary key fields need to be separated by commas",
  "meta.Sinks.Kudu.PartitionKey": "Partition key",
  "meta.Sinks.Kudu.PartitionStrategy": "Partition strategy",
  "meta.Sinks.Kudu.buckets": "Buckets",
  "meta.Sinks.Pulsar.Tenant": "Pulsar tenant",
  "meta.Sinks.Pulsar.Namespace": "Namespace",
  "meta.Sinks.Pulsar.PartitionNum": "Partition number",
  "meta.Sinks.Cls.StorageDuration": "Log save time",
  "meta.Sinks.Cls.StorageDuration.Week": "One week",
  "meta.Sinks.Cls.StorageDuration.Month": "One month",
  "meta.Sinks.Cls.StorageDuration.HalfAYear": "Half a year",
  "meta.Sinks.Cls.StorageDuration.OneYear": "One year",
  "meta.Sinks.Cls.Tag": "Tag",
  "meta.Sinks.Cls.Tokenizer": "Tokenizer rule",
  "meta.Sinks.Cls.IsMetaField": "Is meta field",
  "meta.Sources.COS.DataNode": "Data node",
  "meta.Group.InlongGroupId": "Inlong group id",
  "meta.Group.InlongGroupIdRules": "Only English letters, numbers, dots(.), minus(-), and underscores(_)",
  "meta.Group.InlongGroupName": "Inlong group name",
  "meta.Group.InlongGroupOwners": "Inlong group owners",
  "meta.Group.InlongGroupOwnersExtra": "Can view, modify group info",
  "meta.Group.InlongGroupIntroduction": "Description",
  "meta.Group.MQType": "MQ type",
  "meta.Group.Pulsar.QueueModule": "Queue module",
  "meta.Group.Pulsar.Parallel": "Parallel",
  "meta.Group.Pulsar.Serial": "Serial",
  "meta.Group.Pulsar.PartitionNum": "Topic part nums",
  "meta.Group.Pulsar.PartitionExtra": "The number of topic partitions, up to 100 can be configured",
  "meta.Group.Pulsar.EnsembleSuffix": "Number of nodes",
  "meta.Group.Pulsar.EnsembleExtra": "How many nodes are Topic saved to, up to 10 can be configured",
  "meta.Group.Pulsar.WriteQuorumSuffix": "Number of copies",
  "meta.Group.Pulsar.WriteQuorumExtra": "How many copies of each message are saved, up to 10 can be configured",
  "meta.Group.Pulsar.AckQuorumSuffix": "Number of responses",
  "meta.Group.Pulsar.AckQuorumExtra": "The number of ack required for a successful write request, up to 10 can be configured",
  "meta.Group.Pulsar.RetentionTimeExtra": "The save time of the message in the ack state, the message will be deleted when this value is exceeded (up to 14 days)",
  "meta.Group.Pulsar.TtlExtra": "The time-to-live time of the message, messages exceeding this value will be marked as ack (retained for up to 14 days)",
  "meta.Group.Pulsar.RetentionSizeExtra": "Message capacity in ack state, messages exceeding this value will be deleted (-1 means never delete)",
  "meta.Group.Pulsar.MaxMarkDeleteRateExtra": "Rate limit for mark delete operations",
  "meta.Group.TubeMq.NumberOfAccess": "Number of access",
  "meta.Group.TubeMq.TenThousand/Day": "Ten thousand / Day",
  "meta.Group.TubeMq.AccessSize": "Access size",
  "meta.Group.TubeMq.GB/Day": "GB / Day",
  "meta.Group.TubeMq.AccessPeakPerSecond": "Peak records",
  "meta.Group.TubeMq.Stripe/Second": "Records / Second",
  "meta.Group.TubeMq.SingleStripMaximumLength": "Single max length",
  "meta.Group.Kafka.Partition": "Number of partitions",
  "meta.Group.Kafka.PartitionExtra": "Maximum limit is 100",
  "meta.Group.Kafka.ReplicationFactor": "Replications",
  "meta.Group.Status.Approved": "Approved",
  "meta.Group.Status.Draft": "Draft",
  "meta.Group.Status.Cancel": "Cancel",
  "meta.Group.Status.InPlace": "In place",
  "meta.Group.Status.Reject": "Reject",
  "meta.Group.Status.ConfigurationSuccess": "Success",
  "meta.Group.Status.BeSubmitted": "Be submitted",
  "meta.Group.Status.BeApproved": "Be approved",
  "meta.Group.Status.ConfigurationFailed": "Configuration failed",
  "meta.Group.Status.Deleting": "Deleting",
  "meta.Group.Status.Deleted": "Deleted",
  "meta.Group.Status.Suspending": "Suspending",
  "meta.Group.Status.Suspended": "Suspended",
  "meta.Group.Status.Restarting": "Restarting",
  "meta.Group.Status.Restarted": "Restarted",
  "meta.Synchronize.SinkMultipleEnable": "Full database migration",
  "meta.Synchronize.GroupId": "Group ID",
  "meta.Synchronize.GroupIdHelp": "Group ID and stream ID are the same by default",
  "meta.Synchronize.InlongGroupOwnersExtra": "Can view, modify data synchronization info",
  "meta.Synchronize.GroupOwners": "Group owners",
  "meta.Synchronize.SyncType": "Sync Type",
  "meta.Synchronize.RealTimeSync": "RealTime Sync",
  "meta.Synchronize.RealTime": "RealTime",
  "meta.Synchronize.Offline": "Offline",
  "meta.Synchronize.OfflineSync": "Offline Sync",
  "meta.Synchronize.SchedulingRules": "Scheduling Rules",
  "meta.Synchronize.ScheduleType": "Schedule Type",
  "meta.Synchronize.ScheduleEngine": "Schedule Engine",
  "meta.Synchronize.ScheduleQuartz": "Quartz",
  "meta.Synchronize.ScheduleAirflow": "Airflow",
  "meta.Synchronize.DolphinScheduler": "DolphinScheduler",
  "meta.Synchronize.Conventional": "Conventional",
  "meta.Synchronize.Crontab": "Crontab",
  "meta.Synchronize.DelayTime": "Delay Time",
  "meta.Synchronize.ScheduleUnit": "Schedule Unit",
  "meta.Synchronize.ScheduleUnit.Year": "Year",
  "meta.Synchronize.ScheduleUnit.Month": "Month",
  "meta.Synchronize.ScheduleUnit.Day": "Day",
  "meta.Synchronize.ScheduleUnit.Minute": "Minute",
  "meta.Synchronize.ScheduleUnit.Hours": "Hours",
  "meta.Synchronize.ScheduleUnit.Single": "Single",
  "meta.Synchronize.ScheduleInterval": "Schedule Interval",
  "meta.Synchronize.ValidTime": "Valid Time",
  "meta.Synchronize.CronExpression": "Cron Expression",
  "meta.Synchronize.DependConfiguration": "Depend Configuration",
  "meta.Synchronize.SelfDependence": "Self Dependence",
  "meta.Synchronize.Alone": "Alone",
  "meta.Synchronize.Self": "Self",
  "meta.Synchronize.Parallel": "Parallel",
  "meta.Synchronize.TaskParallelism": "Task Parallelism",
  "meta.Stream.StreamId": "Stream id",
  "meta.Stream.StreamIdRules": "Only English letters, numbers, dots(.), minus(-), and underscores(_)",
  "meta.Stream.DataSeparator": "Source data separator",
  "meta.Stream.DataSeparator.Space": "Space",
  "meta.Stream.DataSeparator.Asterisk": "Asterisk(*)",
  "meta.Stream.DataSeparator.Comma": "Comma(,)",
  "meta.Stream.DataSeparator.Semicolon": "Semicolon(;)",
  "meta.Stream.DataSeparator.VerticalLine": "Vertical line (|)",
  "meta.Stream.DataSeparator.DoubleQuotes": "Double quotes(\")",
  "meta.Stream.StreamName": "Stream name",
  "meta.Stream.FieldName": "Field name",
  "meta.Stream.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Stream.DataType": "Data type",
  "meta.Stream.FieldType": "Field type",
  "meta.Stream.FieldComment": "Field comment",
  "meta.Stream.DataEncoding": "Data encoding",
  "meta.Stream.Description": "Description",
  "meta.Stream.SourceDataField": "Source fields",
  "meta.Stream.SourceDataField.Template": "Source fields Template",
  "meta.Stream.IgnoreParseError": "Ignore parse error",
  "meta.Stream.Status.New": "New",
  "meta.Stream.Status.Pending": "Pending",
  "meta.Stream.Status.Error": "Error",
  "meta.Stream.Status.Success": "Success",
  "meta.Stream.ExecuteWorkflow": "Execute workflow",
  "meta.Stream.ExecuteConfirm": "Are you sure to execute the workflow?",
  "meta.Stream.ExecuteSuccess": "Execution success",
  "meta.Stream.WrapType": "Message type",
  "meta.Stream.WrapTypeHelp": "Message body packaging type, default InLongMsg V0. Raw: No protocol packaging of the message body, InLongMsg V0: Six-stage packaging protocol, InLongMsg V1: PB packaging protocol",
  "meta.Stream.PredefinedFields": "Predefined fields",
  "meta.Transform.Name": "Transform name",
  "meta.Consume.ConsumerGroupName": "Consumer group name",
  "meta.Consume.TopicName": "Topic name",
  "meta.Consume.MQType": "MQ type",
  "meta.Consume.ConsumerGroupNameRules": "Only lowercase letters, numbers, minus, and underscores",
  "meta.Consume.TargetInlongGroupID": "Target inlong group id",
  "meta.Consume.TargetInlongStreamID": "Target inlong stream id",
  "meta.Consume.MQAddress": "MQ address",
  "meta.Consume.FilterEnabled": "Filter enabled",
  "meta.Consume.Yes": "Yes",
  "meta.Consume.No": "No",
  "meta.Consume.Owner": "Subscription owners",
  "meta.Consume.OwnersExtra": "Can view, modify subscription info",
  "meta.Consume.Pulsar.isDiq": "Configure dead letter queue",
  "meta.Nodes.Name": "Name",
  "meta.Nodes.Type": "Type",
  "meta.Nodes.Owners": "Owners",
  "meta.Nodes.Description": "Description",
  "meta.Nodes.Hive.DataPath": "Data path",
  "meta.Nodes.Hive.DataPathHelp": "Storage path of the DB, excluding the table name, such as: hdfs://127.0.0.1:9000/warehouse/inlong.db",
  "meta.Nodes.Hive.ConfDir": "Conf dir",
  "meta.Nodes.Hive.ConfDirHelp": "Upload the hive-site.xml file of the Hive cluster to a directory in HDFS, such as: /user/hive/conf",
  "meta.Nodes.MySQL.Username": "Username",
  "meta.Nodes.MySQL.Password": "Password",
  "meta.Nodes.MySQL.Url": "URL",
  "meta.Nodes.MySQL.BackupUrl": "Backup url",
  "meta.Nodes.OceanBase.Username": "Username",
  "meta.Nodes.OceanBase.Password": "Password",
  "meta.Nodes.OceanBase.Url": "URL",
  "meta.Nodes.OceanBase.BackupUrl": "Backup url",
  "meta.Nodes.PostgreSQL.Username": "Username",
  "meta.Nodes.PostgreSQL.Password": "Password",
  "meta.Nodes.PostgreSQL.Url": "URL",
  "meta.Nodes.ES.Host": "Host",
  "meta.Nodes.ES.HostHelp": "One or more Elasticsearch hosts to connect to, e.g. 'http://host_name:9092;http://host_name:9093'",
  "meta.Nodes.ES.Username": "Username",
  "meta.Nodes.ES.Password": "Password",
  "meta.Nodes.ES.BulkActionUnit": "Items",
  "meta.Nodes.ES.FlushInterval": "Flush interval",
  "meta.Nodes.ES.FlushIntervalUnit": "S",
  "meta.Nodes.ES.ConcurrentRequests": "Concurrent requests",
  "meta.Nodes.ES.MaxConnect": "Max connect",
  "meta.Nodes.ES.KeywordMaxLength": "Max keyword length",
  "meta.Nodes.ES.IsUseIndexId": "Create index id or not",
  "meta.Nodes.ES.MaxThreads": "Max threads",
  "meta.Nodes.Iceberg.Username": "Username",
  "meta.Nodes.Iceberg.Password": "Password",
  "meta.Nodes.Iceberg.Url": "URL",
  "meta.Nodes.Iceberg.Warehouse": "Warehouse",
  "meta.Nodes.Iceberg.CatalogType": "Catalog type",
  "meta.Nodes.ClickHouse.Username": "Username",
  "meta.Nodes.ClickHouse.Password": "Password",
  "meta.Nodes.ClickHouse.Url": "URL",
  "meta.Nodes.StarRocks.Username": "Username",
  "meta.Nodes.StarRocks.Password": "Password",
  "meta.Nodes.StarRocks.Url": "URL",
  "meta.Nodes.Hive.Username": "Username",
  "meta.Nodes.Hive.Password": "Password",
  "meta.Nodes.Redis.Database": "Database",
  "meta.Nodes.Redis.clusterMode": "Cluster mode",
  "meta.Nodes.Redis.Host": "Host",
  "meta.Sinks.Redis.Port": "port",
  "meta.Nodes.Redis.MasterName": "Sentinel master",
  "meta.Nodes.Redis.SentinelsInfo": "Sentinels info",
  "meta.Nodes.Redis.ClusterNodes": "Cluster nodes",
  "meta.Nodes.Redis.ClusterMode": "Cluster mode",
  "meta.Nodes.Redis.ClusterModeHelper": "Please select custer mode",
  "meta.Nodes.Redis.PortHelper": "Please select Redis server port, default: 6379",
  "meta.Nodes.Http.Username": "Username",
  "meta.Nodes.Http.Password": "Password",
  "meta.Nodes.Http.BaseUrl": "Base url",
  "meta.Nodes.Http.EnableCredential": "EnableCredential",
  "meta.Nodes.Http.MaxConnect": "MaxConnect",
  "meta.Nodes.Hudi.Username": "Username",
  "meta.Nodes.Hudi.Password": "Password",
  "meta.Nodes.Hudi.Url": "URL",
  "meta.Nodes.Hudi.CatalogType": "Catalog type",
  "meta.Nodes.Hudi.Warehouse": "Warehouse",
  "meta.Nodes.Kudu.masters": "Masters",
  "meta.Nodes.Kudu.DefaultAdminOperationTimeoutMs": "Admin operation timeout(ms)",
  "meta.Nodes.Kudu.DefaultOperationTimeoutMs": "Operation timeout(ms)",
  "meta.Nodes.Kudu.DefaultSocketReadTimeoutMs": "Socket read timeout(ms)",
  "meta.Nodes.Kudu.StatisticsDisabled": "Disabled statistics",
  "meta.Nodes.Cls.MainAccountId": "Main account id",
  "meta.Nodes.Cls.SubAccountId": "Sub account id",
  "meta.Nodes.Cls.SendSecretKey": "Send secretKey",
  "meta.Nodes.Cls.SendSecretId": "Send secretId",
  "meta.Nodes.Cls.ManageSecretKey": "Manage secretKey",
  "meta.Nodes.Cls.ManageSecretId": "Manage secret Id",
  "meta.Nodes.Cls.Endpoint": "Endpoint",
  "meta.Nodes.Cls.Region": "Service region",
  "meta.Nodes.Cls.LogSetId": "Log set id",
  "meta.Nodes.Doris.Username": "Username",
  "meta.Nodes.Doris.Password": "Password",
  "meta.Nodes.Doris.Url": "URL",
  "meta.Nodes.COS.BucketName": "Bucket name",
  "meta.Nodes.COS.CredentialsId": "Credentials id",
  "meta.Nodes.COS.CredentialsKey": "Credentials key",
  "meta.Nodes.COS.Region": "Region",
  "components.EditableTable.NewLine": "New line",
  "components.EditableTable.BatchParseField": "Batch add",
  "components.EditableTable.DeleteAll": "Delete all",
  "components.EditableTable.TemplateSelect": "Select Template",
  "components.SelectTemplateModal.SelectDataFromTemplate": "Select Data From Template",
  "components.SelectTemplateModal.TemplateSelect": "Template Select",
  "components.SelectTemplateModal.SelectTooltip": "Selecting a template to import will overwrite the original added source data fields",
  "components.FieldParseModule.BatchAddField": "Batch adding",
  "components.FieldParseModule.Append": "Append",
  "components.FieldParseModule.Override": "Override",
  "components.FieldParseModule.Format": "Format",
  "components.FieldParseModule.Empty": "Empty",
  "components.FieldParseModule.PasteTemplate": "Paste template",
  "components.FieldParseModule.Parse": "Parse",
  "components.FieldParseModule.Upload": "Upload",
  "components.FieldParseModule.OnlyUploadExcelFile": "Only upload Excel File(.xlsx) !",
  "components.FieldParseModule.DownloadTemplate": "Download template",
  "components.FormGenerator.plugins.PleaseChoose": "Please select",
  "components.FormGenerator.plugins.PleaseInput": "Please input",
  "components.TextSwitch.Title": "Advanced options",
  "components.Layout.NavWidget.Logout": "Logout",
  "components.Layout.NavWidget.EditPassword": "Edit password",
  "components.Layout.NavWidget.PersonalKey": "Personal key",
  "components.Layout.NavWidget.Password": "Old password",
  "components.Layout.NavWidget.NewPassword": "New password",
  "components.Layout.NavWidget.ConfirmPassword": "Confirm password",
  "components.Layout.NavWidget.Remind": "Password does not match, please re-enter",
  "components.Layout.Tenant.Success": "Success",
  "components.Layout.UserManual": "User manual",
  "components.Layout.Feedback": "Feedback",
  "components.HighSelect.Customize": "Customize",
  "components.HighRadio.Customize": "Customize (ascii code)",
  "components.HighSelect.SearchPlaceholder": "Please enter keyword...",
  "components.NodeSelect.Create": "Create node",
  "components.FieldList.SinkFieldName": "Sink field name",
  "components.FieldList.SinkFieldType": "Sink field type",
  "components.FieldList.FieldComment": "Field comment",
  "components.CreateTable.Table": "Create  table",
  "components.CreateTable.TableType": "Table type",
  "configs.pagination.Total": "Total {{total}} items",
  "pages.GroupDashboard.ExecutionLogModal.Re-executingSuccess": "Re-executing success",
  "pages.GroupDashboard.ExecutionLogModal.TaskType": "Task type",
  "pages.GroupDashboard.ExecutionLogModal.ConfirmThatItIsRe-executed": "Confirm that it is re-executed?",
  "pages.GroupDashboard.ExecutionLogModal.CarriedOut": "Carried out",
  "pages.GroupDashboard.ExecutionLogModal.EndTime": "End time",
  "pages.GroupDashboard.ExecutionLogModal.Processing": "Processing",
  "pages.GroupDashboard.ExecutionLogModal.ExecuteLog": "Execute log",
  "pages.GroupDashboard.ExecutionLogModal.RunResults": "Run results",
  "pages.GroupDashboard.ExecutionLogModal.Success": "Success",
  "pages.GroupDashboard.ExecutionLogModal.Skip": "Jump over",
  "pages.GroupDashboard.ExecutionLogModal.Fail": "Failure",
  "pages.GroupDashboard.config.Total": "Total",
  "pages.GroupDashboard.config.WaitAssignCount": "Wait assign count",
  "pages.GroupDashboard.config.WaitApproveCount": "Wait approve count",
  "pages.GroupDashboard.config.Reject": "Reject",
  "pages.GroupDashboard.config.ExecuteLog": "Execute log",
  "pages.GroupDashboard.config.Restart": "Restart",
  "pages.GroupDashboard.config.Stop": "Stop",
  "pages.GroupDashboard.ConfirmDelete": "Confirm delete?",
  "pages.GroupDashboard.Create": "Create",
  "pages.GroupDashboard.SuccessfullyDeleted": "Successfully deleted",
  "pages.GroupDashboard.ConfirmRestart": "Confirm restart?",
  "pages.GroupDashboard.SuccessfullyRestart": "Successfully restart",
  "pages.GroupDashboard.ConfirmStop": "Confirm stop?",
  "pages.GroupDashboard.SuccessfullyStop": "Successfully stop",
  "pages.GroupDetail.Info.Basic": "Basic",
  "pages.GroupDetail.Info.Mq": "MQ",
  "pages.GroupDetail.Info.Back": "Back",
  "pages.GroupDetail.Info.NextStep": "Next",
  "pages.GroupDetail.Info.DataStreams": "Data streams",
  "pages.GroupDetail.Info.Submit": "Submit",
  "pages.GroupDetail.Info.SubmittedSuccessfully": "Submitted successfully",
  "pages.GroupDetail.Info.SubmittedWarn": "Please create data source and sink first",
  "pages.GroupDetail.Info.CheckMsg": "Please check the form",
  "pages.GroupDetail.Info.Previous": "Previous",
  "pages.GroupDetail.Info.Create": "Create",
  "pages.GroupDetail.Sources.SaveSuccessfully": "Save successfully",
  "pages.GroupDetail.Sources.DeleteConfirm": "Delete confirm",
  "pages.GroupDetail.Sources.DeleteSuccessfully": "Delete successfully",
  "pages.GroupDetail.Sources.DataStreams": "Data streams",
  "pages.GroupDetail.Sources.Create": "Create",
  "pages.GroupDetail.Sources.Edit": "Edit",
  "pages.GroupDetail.Sources.status.Disable": "Disable",
  "pages.GroupDetail.Sources.status.Normal": "Normal",
  "pages.GroupDetail.Sources.status.Failure": "Failure",
  "pages.GroupDetail.Sources.status.Frozen": "Stop",
  "pages.GroupDetail.Sources.status.New": "New",
  "pages.GroupDetail.Sources.status.TobeAdd": "To be add",
  "pages.GroupDetail.Sources.status.TobeDelete": "To be delete",
  "pages.GroupDetail.Sources.status.TobeRetry": "To be retry",
  "pages.GroupDetail.Sources.status.TobeFrozen": "To be stop",
  "pages.GroupDetail.Sources.status.TobeActive": "To be restart",
  "pages.GroupDetail.Sources.status.BeenAdd": "Been add",
  "pages.GroupDetail.Sources.status.BeenDelete": "Been delete",
  "pages.GroupDetail.Sources.status.BeenRetry": "Been retry",
  "pages.GroupDetail.Sources.status.BeenFrozen": "Been stop",
  "pages.GroupDetail.Sources.status.BeenActive": "Been restart",
  "pages.GroupDetail.Sink.New": "Create",
  "pages.GroupDetail.Sink.Edit": "Edit",
  "pages.GroupDetail.Sink.Type": "Type",
  "pages.GroupDetail.Sink.DataStreams": "Data streams",
  "pages.GroupDetail.Sink.Status.New": "New",
  "pages.GroupDetail.Sink.Status.Pending": "Pending",
  "pages.GroupDetail.Sink.Status.Error": "Error",
  "pages.GroupDetail.Sink.Status.Success": "Success",
  "pages.GroupDetail.Sink.Cancel": "Cancel",
  "pages.GroupDetail.Sink.Save": "Save",
  "pages.GroupDetail.Sink.SaveAndRefresh": "Save and submit the process",
  "pages.GroupDetail.Stream.StreamConfigTitle": "Data stream configuration",
  "pages.GroupDetail.Stream.CreateDataStream": "Create",
  "pages.GroupDetail.Info": "Group info",
  "pages.GroupDetail.Streams": "Streams",
  "pages.GroupDetail.Sources": "Sources",
  "pages.GroupDetail.Sinks": "Sinks",
  "pages.GroupDetail.SinkType": "Sink Type",
  "pages.GroupDetail.Audit.Count": "Count",
  "pages.GroupDetail.Audit.Group": "Group",
  "pages.GroupDetail.Audit.Stream": "Stream",
  "pages.GroupDetail.Audit.Size": "Size",
  "pages.GroupDetail.Audit": "Audit",
  "pages.GroupDetail.Delay": "Transmission delay",
  "pages.GroupDetail.OperationLog": "Operation log",
  "pages.GroupDetail.Resource": "Resource detail",
  "pages.GroupDetail.Resource.Info": " Info",
  "pages.GroupDetail.Audit.DataStream": "Data stream",
  "pages.GroupDetail.Audit.StartDate": "Start Date",
  "pages.GroupDetail.Audit.EndDate": "End Date",
  "pages.GroupDetail.Audit.AuditIds": "Contents",
  "pages.GroupDetail.Audit.Search": "Search",
  "pages.GroupDetail.Audit.Time": "Time",
  "pages.GroupDetail.Audit.Receive": "Receive",
  "pages.GroupDetail.Audit.Send": "Send",
  "pages.GroupDetail.Audit.TimeStaticsDim": "Time statics dim",
  "pages.GroupDetail.Audit.Min": "Minute",
  "pages.GroupDetail.Audit.Hour": "Hour",
  "pages.GroupDetail.Audit.Day": "Day",
  "pages.GroupDetail.Audit.Sink": "Sink",
  "pages.GroupDetail.Audit.Item": "Audit item",
  "pages.GroupDetail.Metric.Item": "Metric item",
  "pages.GroupDetail.Audit.Total": "Total",
  "pages.GroupDetail.Audit.DatepickerRule": "Out of selectable time range",
  "pages.GroupDetail.Audit.ExportCSV": "Export CSV File",
  "pages.GroupDetail.Delay.QueryDate": "Query date",
  "pages.GroupDetail.Delay.AverageTitle": "Average transmission delay (ms)",
  "pages.GroupDetail.Delay.RealTimeTitle": "Transmission delay (ms)",
  "pages.GroupDetail.Stream.Preview": "Data preview",
  "pages.GroupDetail.Stream.Original": "Original",
  "pages.GroupDetail.Stream.ShowOriginal": "Show Original",
  "pages.GroupDetail.Stream.Closed": "Close",
  "pages.GroupDetail.Stream.Dt": "Data time(dt)",
  "pages.GroupDetail.Stream.Content": "Data content",
  "pages.GroupDetail.Stream.Number": "Records number",
  "pages.GroupDetail.OperationLog.Stream": "Stream",
  "pages.GroupDetail.OperationLog.OperationTarget": "Operation target",
  "pages.GroupDetail.OperationLog.OperationType": "Operation type",
  "pages.GroupDetail.OperationLog.Table.GroupId": "Group id",
  "pages.GroupDetail.OperationLog.Table.StreamId": "Stream id",
  "pages.GroupDetail.OperationLog.Table.Operator": "Operator",
  "pages.GroupDetail.OperationLog.Table.OperationType": "Operation type",
  "pages.GroupDetail.OperationLog.Table.OperationTarget": "Operation target",
  "pages.GroupDetail.OperationLog.Table.Log": "Log",
  "pages.GroupDetail.OperationLog.Table.OperationTime": "Operation time",
  "pages.ApprovalDetail.GroupConfig.DataStorages": "Data storages",
  "pages.ApprovalDetail.GroupConfig.ApprovalInformation": "Approval information",
  "pages.ApprovalDetail.GroupConfig.DataFlowInformation": "Data stream information",
  "pages.ApprovalDetail.GroupConfig.BindClusterTag": "Cluster tag",
  "pages.ApprovalDetail.GroupConfig.DataReportType": "Report data",
  "pages.ApprovalDetail.GroupConfig.DataReportType.DataProxyWithSource": "Report to DataProxy and respond when the DataProxy received data",
  "pages.ApprovalDetail.GroupConfig.DataReportType.DataProxyWithSink": "Report to DataProxy and respond after DataProxy sends data",
  "pages.ApprovalDetail.GroupConfig.DataReportType.MQ": "Report to MQ and respond when the MQ received data",
  "pages.ApprovalDetail.ConsumeConfig.ConsumerGroup": "Consumer group",
  "pages.ApprovalDetail.ConsumeConfig.ApprovalInfo": "Approval information",
  "pages.ApprovalDetail.SubmitApplication": "Submit application",
  "pages.ApprovalDetail.Process": "Process",
  "pages.ApprovalDetail.Ok": "Ok",
  "pages.ApprovalDetail.RevokeSuccess": "Revoke success",
  "pages.ApprovalDetail.ConfirmReject": "Confirm?",
  "pages.ApprovalDetail.Withdraw": "Withdraw",
  "pages.ApprovalDetail.Back": "Back",
  "pages.ApprovalDetail.ConfirmWithdrawal": "Confirm withdrawal?",
  "pages.ApprovalDetail.ApplicationTime": "Application time",
  "pages.ApprovalDetail.Requisition": "Requisition",
  "pages.ApprovalDetail.ApprovalComments": "Approval comments",
  "pages.ApprovalDetail.Reject": "Reject",
  "pages.ApprovalDetail.Applicant": "Applicant",
  "pages.ApprovalDetail.ApprovalProcess": "Approval",
  "pages.ApprovalDetail.WaitingForApproval": "Waiting for approval",
  "pages.ApprovalDetail.RejectSuccess": "Reject success",
  "pages.ApprovalDetail.Done": "Done",
  "pages.Approvals.status.HaveTerminated": "Have terminated",
  "pages.Approvals.status.Completed": "Completed",
  "pages.Approvals.status.Processing": "Processing",
  "pages.Approvals.status.Rejected": "Rejected",
  "pages.Approvals.status.Canceled": "Canceled",
  "pages.Approvals.status.Ok": "Approved",
  "pages.Approvals.ApplicationTime": "Time",
  "pages.Approvals.ProcessingTime": "Processing Time",
  "pages.Approvals.ApplicationType": "Type",
  "pages.Approvals.Approval": "Approval",
  "pages.Approvals.Approver": "Approver",
  "pages.Approvals.Applicant": "Applicant",
  "pages.Approvals.ProcessID": "Id",
  "pages.Approvals.GroupId": "Group id",
  "pages.Approvals.ConsumeName": "Consume name",
  "pages.Approvals.GroupMode": "Mode",
  "pages.Approvals.GroupMode.Ingestion": "Ingestion",
  "pages.Approvals.GroupMode.Subscription": "Subscription",
  "pages.Approvals.GroupMode.DataSync": "Synchronization",
  "pages.Approvals.MyApplication": "My application",
  "pages.Approvals.MyApproval": "My approval",
  "pages.Approvals.Type.Group": "Apply group",
  "pages.Approvals.Type.Consume": "Apply subscription",
  "pages.Approvals.Copy": "Copy Approval Address",
  "pages.ConsumeCreate.SubscriptionInformation": "Subscription information",
  "pages.ConsumeCreate.Prev": "Prev",
  "pages.ConsumeCreate.Next": "Next",
  "pages.ConsumeCreate.Submit": "Submit",
  "pages.ConsumeCreate.Back": "Back",
  "pages.ConsumeCreate.NewSubscribe": "New subscribe",
  "pages.ConsumeDashboard.config.BeAllocated": "Be allocated",
  "pages.ConsumeDashboard.config.ApplicationStatus": "Application status",
  "pages.ConsumeDashboard.config.Reject": "Reject",
  "pages.ConsumeDashboard.config.OperatingStatus": "Operating status",
  "pages.ConsumeDashboard.config.Total": "Total",
  "pages.ConsumeDashboard.config.Pending": "Pending",
  "pages.ConsumeDashboard.config.ConsumerGroup": "Consumer group",
  "pages.ConsumeDashboard.config.ConsumeInlongGroupId": "Target inlong group id",
  "pages.ConsumeDashboard.config.RecentConsumeTime": "Recent consume time",
  "pages.ConsumeDashboard.config.Middleware": "Message queue",
  "pages.ConsumeDashboard.status.Normal": "Normal",
  "pages.ConsumeDashboard.status.Abnormal": "Abnormal",
  "pages.ConsumeDashboard.status.Shield": "Shield",
  "pages.ConsumeDashboard.status.NoStatus": "No status",
  "pages.ConsumeDashboard.status.Passed": "Passed",
  "pages.ConsumeDashboard.status.Cancelled": "Cancelled",
  "pages.ConsumeDashboard.NewSubscribe": "Create",
  "pages.ConsumeDetail.SubscribeDetails": "Subscription detail",
  "pages.ConsumeDetail.ClusterInfo": "Cluster info:",
  "pages.Clusters.Type": "Type",
  "pages.Clusters.TypeAll": "All",
  "pages.Clusters.Create": "Create",
  "pages.Clusters.Edit": "Edit",
  "pages.Clusters.LastModifier": "Last modifier",
  "pages.Clusters.Name": "Cluster Name",
  "pages.Clusters.Tag": "Cluster Tag",
  "pages.Clusters.InCharges": "Owners",
  "pages.Clusters.Node.Description": "Description",
  "pages.Clusters.Description": "Description",
  "pages.Clusters.TestConnection": "Test connection",
  "pages.Clusters.Node.Name": "Node",
  "pages.Clusters.Node.Port": "Port",
  "pages.Clusters.Node.ProtocolType": "Protocol type",
  "pages.Clusters.Node.Agent": "Agent",
  "pages.Clusters.Node.Agent.Version": "Version",
  "pages.Cluster.Node.More": "More",
  "pages.Cluster.Node.Install": "Reinstall",
  "pages.Nodes.Restart": "Restart",
  "pages.Cluster.Node.InstallTitle": "Are you sure to reinstall?",
  "pages.Cluster.Node.RestartTitle": "Are you sure to restart?",
  "pages.Cluster.Node.Unload": "Uninstall",
  "pages.Cluster.Node.UnloadTitle": "Are you sure to uninstall?",
  "pages.Cluster.Node.InstallLog": "Install log",
  "pages.Cluster.Node.InstallLog.None": "No logs yet",
  "pages.Clusters.Node.Agent.HeartbeatDetection": "Heartbeat Detection",
  "pages.Clusters.Node.Agent.HeartbeatInfo": "Heartbeat Info",
  "pages.Clusters.Node.Agent.HeartbeatInfo.ModifyTime": "Modify Time",
  "pages.Clusters.Node.Agent.HeartbeatInfo.ReportTime": "Report Time",
  "pages.Clusters.Node.Agent.HeartbeatInfo.Component": "Type",
  "pages.Clusters.Node.Agent.HeartbeatInfo.Instance": "Ip",
  "pages.Clusters.Node.AgentInstaller": "Installer",
  "pages.Clusters.Node.IsInstall": "Installation",
  "pages.Clusters.Node.ManualInstall": "Manual",
  "pages.Clusters.Node.SSHInstall": "SSH",
  "pages.Clusters.Node.IdentifyType": "Identify Type",
  "pages.Clusters.Node.Username": "SSH Username",
  "pages.Clusters.Node.SSHKey": "SSH Key",
  "pages.Clusters.Node.Password": "SSH Password",
  "pages.Clusters.Node.SSHPort": "SSH Port",
  "pages.Clusters.Node.SSHKeyHelper": "Please upload the public key to the ~/.ssh/authorized_keys file of the Agent node",
  "pages.Clusters.Node.Version":"Version",
  "pages.Clusters.Node.Status": "Status",
  "pages.Clusters.Node.Status.Normal": "Normal",
  "pages.Clusters.Node.Status.Timeout": "Timeout",
  "pages.Clusters.Node.Status.INSTALLING": "Installing",
  "pages.Clusters.Node.Status.INSTALLFAILED": "Install  Failed",
  "pages.Clusters.Node.Status.INSTALLSUCCESS": "Install Success",
  "pages.Clusters.Node.LastModifier": "Last modifier",
  "pages.Clusters.Node.Creator": "Creator",
  "pages.Clusters.Node.Create": "Create",
  "pages.Clusters.Node.IpRule": "Please enter the IP address correctly",
  "pages.Clusters.Node.PortRule": "Please enter the port address correctly",
  "pages.Clusters.Node.ProtocolTypeRule": "Please enter the protocol type correctly",
  "pages.Clusters.Node.BatchUpdate": "Batch Operation",
  "pages.Clusters.Node.BatchNum": "Batch Num",
  "pages.Clusters.Node.Interval": "Interval",
  "pages.Clusters.Node.Minute": "Minute",
  "pages.Clusters.Node.OperationStatusQuery": "Operation Status Query",
  "pages.Clusters.Node.OperationType": "Operation Type",
  "pages.Clusters.Node.UpgradeAgentAndInstaller": "Upgrade Agent and Installer",
  "pages.Clusters.Node.UpgradeAgent": "Upgrade Agent",
  "pages.Clusters.Node.UpgradeInstaller": "Upgrade Installer",
  "pages.Clusters.Node.RestartAgent": "Restart Agent",
  "pages.Clusters.Node.Online": "Online",
  "pages.Clusters.Pulsar.PulsarTenant": "Default tenant",
  "pages.Clusters.Pulsar.TokenPlaceholder": "Required if the cluster is configured with Token",
  "pages.Clusters.Kafka.ClusterUrl": "Cluster url",
  "pages.Clusters.Pulsar.ServiceUrlHelper": "For producing and consuming data",
  "pages.Clusters.Pulsar.AdminUrlHelper": "Used to manage (e.g. create, modify) tenants, namespaces, topics and subscription groups",
  "pages.Clusters.Tube.MasterRpcUrlHelper": "Master RPC URL, used to produce and consume data",
  "pages.Clusters.Tube.MasterWebUrlHelper": "Master Web URL, used to manage (e.g. create, modify) topics and consumer groups",
  "pages.ClusterTags.Name": "Cluster tag",
  "pages.ClusterTags.InCharges": "Owners",
  "pages.ClusterTags.Description": "Description",
  "pages.ClusterTags.ModifyTime": "Modify time",
  "pages.ClusterTags.Modifier": "Modifier",
  "pages.ClusterTags.BindCluster": "Bind cluster",
  "pages.ClusterTags.DelCluster": "Unbind",
  "pages.ClusterTags.DelClusterConfirm": "Are you sure you want to unbind?",
  "pages.ClusterTags.DelClusterSuccess": "Unbind successfully",
  "pages.ClusterTags.DelConfirm": "Deleting a cluster tag will unbind it from all clusters bound to this tag, and make sure this tag is not used by InlongGroup",
  "pages.ClusterTags.NameEditHelp": "Modifying a cluster tag will also modify the tag name in all clusters bound to this tag, and make sure that this label is not used by InlongGroup",
  "pages.ClusterTags.Tenant": "Tenant",
  "pages.ClusterTags.TagPlaceholder": "Please enter a tag",
  "pages.ClusterTags.TenantPlaceholder": "Please select a tenant",
  "pages.Login.PleaseEnterUserName": "Please enter user name",
  "pages.Login.UserNameSpaceNotAllowed": "The username cannot contain spaces, please remove any spaces and try again",
  "pages.Login.PasswordRules": "Only letters, numbers, minus, @, and underscores",
  "pages.Login.Login": "Login",
  "pages.Login.PleaseEnterYourPassword": "Please enter your password",
  "pages.Login.UserPasswordSpaceNotAllowed": "The username cannot contain spaces, please remove any spaces and try again",
  "pages.UserManagement.DetailModal.Day": "Days",
  "pages.UserManagement.DetailModal.New": "New construction",
  "pages.UserManagement.DetailModal.UserPassword": "Password",
  "pages.UserManagement.DetailModal.EffectiveTime": "Effective time",
  "pages.UserManagement.DetailModal.SavedSuccessfully": "Saved successfully",
  "pages.UserManagement.config.Admin": "Admin",
  "pages.UserManagement.config.UserName": "Username",
  "pages.UserManagement.config.GeneralUser": "General user",
  "pages.UserManagement.config.Creator": "Creator name",
  "pages.UserManagement.config.CreateTime": "Create time",
  "pages.UserManagement.config.AccountRole": "Account role",
  "pages.UserManagement.status.Normal": "Normal",
  "pages.UserManagement.status.Fail": "Fail",
  "pages.UserManagement.CreateAccount": "Create",
  "pages.ApprovalManagement.ProcessName": "Process nName",
  "pages.ApprovalManagement.TaskName": "Task name",
  "pages.ApprovalManagement.Approvers": "Approvers",
  "pages.ApprovalManagement.Creator": "Creator name",
  "pages.ApprovalManagement.Modifier": "Modifier name",
  "pages.ApprovalManagement.CreateProcess": "Create process",
  "pages.Nodes.TestConnection": "Test connection",
  "pages.SynchronizeDetail.Info": "Info",
  "pages.SynchronizeDetail.SourceAndSink": "Data stream",
  "pages.SynchronizeDetail.Audit": "Audit",
  "pages.SynchronizeDashboard.Create": "Create",
  "pages.SynchronizeDashboard.config.Total": "Total",
  "pages.SynchronizeDashboard.config.WaitAssignCount": "Wait assign count",
  "pages.SynchronizeDashboard.config.WaitApproveCount": "Wait approve count",
  "pages.SynchronizeDashboard.config.Reject": "Reject",
  "pages.SynchronizeDashboard.config.ExecuteLog": "Execute log",
  "pages.SynchronizeDashboard.config.Restart": "Restart",
  "pages.SynchronizeDashboard.config.Stop": "Stop",
  "pages.SynchronizeDetail.Info.Back": "Back",
  "pages.SynchronizeDetail.Info.NextStep": "Next",
  "pages.SynchronizeDetail.Info.Submit": "Submit",
  "pages.SynchronizeDetail.Info.SubmittedSuccessfully": "Submitted successfully",
  "pages.SynchronizeDetail.Info.SubmittedWarn": "Please create data source and sink first",
  "pages.SynchronizeDetail.Info.CheckMsg": "Please check the form",
  "pages.SynchronizeDetail.Info.Previous": "Previous",
  "pages.SynchronizeDetail.Info.Create": "Create",
  "pages.SynchronizeDetail.Sources.SavePrompt": "Save success",
  "pages.SynchronizeDetail.Sync.Transform": "Transform",
  "pages.SynchronizeDetail.Transform": "Transform",
  "pages.SynchronizeDetail.Transform.Create": "Create",
  "pages.SynchronizeDetail.Audit.Read": "Read",
  "pages.SynchronizeDetail.Audit.Receive": "Receive",
  "pages.SynchronizeDetail.Transform.FilterAction": "filter Strategy",
  "pages.SynchronizeDetail.Transform.FilterAction.Tooltip": "Retain: Write the data that matches the filtering rule to the target table. Remove: Do not write the data of the hit rule into the target table.",
  "pages.SynchronizeDetail.Transform.FilterAction.RemoveData": "Remove matching data",
  "pages.SynchronizeDetail.Transform.FilterAction.ReserveData": "Retain matching data",
  "pages.SynchronizeDetail.Transform.FilterRules": "Filter rules",
  "pages.SynchronizeDetail.Transform.LogicOperators": "Logic operators",
  "pages.SynchronizeDetail.Transform.FilterFields": "Filter fields",
  "pages.SynchronizeDetail.Transform.Operators": "Operators",
  "pages.SynchronizeDetail.Transform.Operators.IsNull": "Is null",
  "pages.SynchronizeDetail.Transform.Operators.NotNull": "Not null",
  "pages.SynchronizeDetail.Transform.Type": "Type",
  "pages.SynchronizeDetail.Transform.Type.Field": "Field",
  "pages.SynchronizeDetail.Transform.Type.CustomValue": "Custom value",
  "pages.SynchronizeDetail.Transform.ComparisonValue": "Comparison value",
  "components.FieldList.Source": "Source fields",
  "components.FieldList.Sink": "Sink fields",
  "components.FieldList.CreateSource": "Create source fields",
  "components.FieldList.CreateSink": "Create sink fields",
  "components.FieldList.AddField": "Add field",
  "pages.Tenant.config.Description": "Description",
  "pages.Tenant.config.Name": "Tenant name",
  "pages.Tenant.New": "Create",
  "pages.TenantRole.New": "Create",
  "pages.Tenant.config.Username": "Username",
  "pages.Tenant.config.TenantRole": "Tenant role",
  "pages.Tenant.config.Admin": "Tenant admin",
  "pages.Tenant.config.GeneralUser": "General user",
  "pages.Tenant.config.Creator": "Creator",
  "pages.Tenant.config.CreateTime": "Create time",
  "pages.ModuleAudit.Ip": "Query by ip",
  "pages.ModuleAudit.Id": "Query by id",
  "pages.ModuleAudit.Metric": "Query by Metric",
  "pages.ModuleAudit.config.Ip": "Machine ip",
  "pages.ModuleAudit.config.SubValue": "Sub Value",
  "pages.ModuleAudit.config.BenchmarkIndicator": "Benchmark indicator",
  "pages.ModuleAudit.config.ComparativeIndicators": "Comparative indicator",
  "pages.ModuleAudit.config.InlongGroupId": "Inlong group id",
  "pages.ModuleAudit.config.InlongStreamId": "Inlong stream id",
  "pages.ModuleAgent.Agent": "Agent",
  "pages.ModuleAgent.Installer": "Installer",
  "pages.ModuleAgent.Create": "Create Module",
  "pages.ModuleAgent.Config.Name": "Name",
  "pages.ModuleAgent.Config.Version": "Version",
  "pages.ModuleAgent.Config.Package": "Package",
  "pages.ModuleAgent.Config.CheckCommand": "Check Command",
  "pages.ModuleAgent.Config.InstallCommand": "Install Command",
  "pages.ModuleAgent.Config.StartCommand": "Start Command",
  "pages.ModuleAgent.Config.StopCommand": "Stop Command",
  "pages.ModuleAgent.Config.UninstallCommand": "Uninstall Command",
  "pages.ModuleAgent.Config.Creator": "Creator",
  "pages.ModuleAgent.Config.Modifier": "Modifier",
  "pages.ModuleAgent.Config.ModifyTime": "ModifyTime",
  "pages.PackageAgent.Create": "Create Package",
  "pages.PackageAgent.Config.FileName": "File Name",
  "pages.PackageAgent.Config.DownloadUrl": "Download Url",
  "pages.PackageAgent.Config.Md5": "MD5",
  "pages.PackageAgent.Config.StoragePath": "Storage Path",
  "pages.GroupDataTemplate.Edit":"Edit Template",
  "pages.GroupDataTemplate.Create":"Create Template",
  "pages.GroupDataTemplate.Name":"Template Name",
  "pages.GroupDataTemplate.TenantList":"Tenant",
  "pages.GroupDataTemplate.Version":"Version",
  "pages.GroupDataTemplate.VisibleRange":"Visible Range",
  "pages.GroupDataTemplate.InCharges":"Owner",
  "pages.GroupDataTemplate.Creator":"Creator",
  "pages.GroupDataTemplate.Modifier":"Modifier",
  "pages.GroupDataTemplate.VisibleRange.All":"Global",
  "pages.GroupDataTemplate.VisibleRange.InCharges":"Owner",
  "pages.GroupDataTemplate.VisibleRange.Tenant":"Tenant",
  "miscellaneous.total": "... total ",
  "miscellaneous.tenants": " tenants",
  "meta.Sinks.DirtyData.DirtyDataPartition": "Dirty Data Partition",
  "meta.Sinks.DirtyData.DataFlowId": "Data Flow Id",
  "meta.Sinks.DirtyData.GroupId": "Group Id",
  "meta.Sinks.DirtyData.StreamId": "Stream Id",
  "meta.Sinks.DirtyData.ReportTime": "Report Time",
  "meta.Sinks.DirtyData.DataTime": "Data Time",
  "meta.Sinks.DirtyData.ServerType": "Server Type",
  "meta.Sinks.DirtyData.DirtyType": "Dirty Type",
  "meta.Sinks.DirtyData.DirtyMessage": "Dirty Message",
  "meta.Sinks.DirtyData.ExtInfo": "Ext Info",
  "meta.Sinks.DirtyData.DirtyData": "Dirty Data",
  "meta.Sinks.DirtyData.DirtyDetailWarning": "The dirty data task is running, please try again later",
  "meta.Sinks.DirtyData.DirtyTrendWarning": "The dirty data trending task is running, try again later",
  "meta.Sinks.DirtyData.DataCount": "Data Count",
  "meta.Sinks.DirtyData.Search.DirtyType": "Dirty Type",
  "meta.Sinks.DirtyData.Search.ServerType": "Server Type",
  "meta.Sinks.DirtyData.StartTimeError": "The start time cannot be greater than the current time",
  "meta.Sinks.DirtyData.endTimeNotGreaterThanStartTime": "The end time cannot be greater than the current time",
  "meta.Sinks.DirtyData.TimeIntervalError":  "The time interval cannot be more than seven days",
  "meta.Sinks.DirtyTrend.DataTimeUnit":"DataTime Unit",
  "meta.Sinks.DirtyTrend.Day":"Day",
  "meta.Sinks.DirtyTrend.Hour":"Hour",
  "meta.Sinks.DirtyData.Detail":"Detail",
  "meta.Sinks.DirtyData.Trend":"Trend",
  "meta.Sinks.DirtyData":"Dirty Data Query",
  "meta.Sinks.DirtyData.DirtyType.DeserializeError":"Deserialize Error",
  "meta.Sinks.DirtyData.DirtyType.FieldMappingError":"Field Mapping Error",
  "meta.Sinks.DirtyData.DirtyType.LoadError":"Load Error",
  "meta.Sinks.DirtyData.Search.KeyWordHelp":"Please enter a keyword",
  "meta.Sinks.DirtyData.Search.KeyWord":"Key word",
  "meta.Sources.COS.DataNode": "Data node",
  "meta.Sinks.SQL.Sql": "Sql",
  "meta.Sinks.SQL.JdbcUrl": "JDBC url",
  "meta.Sinks.SQL.Username": "username",
  "meta.Sinks.SQL.Password": "password",
  "meta.Sinks.SQL.FetchSize": "Fetch size",
  "meta.SQL.Check": "Check failed, please enter the correct SQL connection address"
}
