<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.inlong</groupId>
        <artifactId>inlong</artifactId>
        <version>2.3.0-SNAPSHOT</version>
    </parent>

    <artifactId>inlong-sort</artifactId>
    <packaging>pom</packaging>
    <name>Apache InLong - Sort</name>

    <modules>
        <module>sort-api</module>
        <module>sort-common</module>
        <module>sort-formats</module>
        <module>sort-core</module>
        <module>sort-dist</module>
        <module>sort-flink</module>
        <module>sort-end-to-end-tests</module>
    </modules>

    <properties>
        <inlong.root.dir>${project.parent.basedir}</inlong.root.dir>
        <debezium.version>1.5.4.Final</debezium.version>
        <kafka.clients.version>2.7.0</kafka.clients.version>
        <rat.basedir>${basedir}</rat.basedir>
        <hbase.version>2.2.3</hbase.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-api</artifactId>
                <version>${debezium.version}</version>
            </dependency>
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-embedded</artifactId>
                <version>${debezium.version}</version>
            </dependency>
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-core</artifactId>
                <version>${debezium.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kudu</groupId>
                <artifactId>kudu-client</artifactId>
                <version>${kudu.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-test-utils-junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${plugin.shade.version}</version>
                    <executions>
                        <execution>
                            <id>shade-flink</id>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <phase>package</phase>
                            <configuration>
                                <shadeTestJar>false</shadeTestJar>
                                <createDependencyReducedPom>false</createDependencyReducedPom>
                                <dependencyReducedPomLocation>${project.basedir}/target/dependency-reduced-pom.xml</dependencyReducedPomLocation>
                                <createSourcesJar>true</createSourcesJar>
                                <transformers>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                </transformers>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${plugin.surefire.version}</version>
                <configuration>
                    <!-- Enforce single fork execution due to heavy mini cluster use in the tests -->
                    <forkCount>1</forkCount>
                    <argLine>-Xms256m -Xmx1024m -Dlog4j.configurationFile=${log4j.configurationfile}
                        -Dmvn.forkNumber=${surefire.forkNumber} -XX:-UseGCOverheadLimit</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${plugin.deploy.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>v1.13</id>
            <!-- End-To-End after refactoring, you need to mention this module under modules. -->
            <properties>
                <sort.flink.version>v1.13</sort.flink.version>
                <flink.version>1.13.5</flink.version>
                <flink.minor.version>1.13</flink.minor.version>
                <flink.scala.binary.version>2.11</flink.scala.binary.version>
                <flink.jackson.version>2.12.1-13.0</flink.jackson.version>
                <flink.protobuf.version>2.7.6</flink.protobuf.version>
                <flink.cdc.base.version>2.3.0</flink.cdc.base.version>
                <flink.streaming.artifactId>flink-streaming-java_${flink.scala.binary.version}</flink.streaming.artifactId>
                <flink.test.utils.artifactId>flink-test-utils_${flink.scala.binary.version}</flink.test.utils.artifactId>
                <flink.runtime.artifactId>flink-runtime_${scala.binary.version}</flink.runtime.artifactId>
                <flink.docker.image.name>flink:1.13.5-scala_2.11</flink.docker.image.name>
            </properties>
        </profile>
        <profile>
            <id>v1.15</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <sort.flink.version>v1.15</sort.flink.version>
                <flink.version>1.15.4</flink.version>
                <flink.minor.version>1.15</flink.minor.version>
                <flink.scala.binary.version>2.12</flink.scala.binary.version>
                <flink.jackson.version>2.12.1-13.0</flink.jackson.version>
                <flink.protobuf.version>2.7.6</flink.protobuf.version>
                <flink.cdc.base.version>2.3.0</flink.cdc.base.version>
                <flink.streaming.artifactId>flink-streaming-java</flink.streaming.artifactId>
                <flink.test.utils.artifactId>flink-test-utils</flink.test.utils.artifactId>
                <flink.runtime.artifactId>flink-runtime</flink.runtime.artifactId>
                <flink.docker.image.name>flink:1.15.4-scala_2.12</flink.docker.image.name>
            </properties>
        </profile>
        <profile>
            <id>v1.18</id>
            <properties>
                <sort.flink.version>v1.18</sort.flink.version>
                <flink.version>1.18.1</flink.version>
                <flink.minor.version>1.18</flink.minor.version>
                <flink.scala.binary.version>2.12</flink.scala.binary.version>
                <flink.test.utils.artifactId>flink-test-utils</flink.test.utils.artifactId>
            </properties>
        </profile>
    </profiles>
</project>
